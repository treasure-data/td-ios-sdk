version: 2.1


commands:
  auxiliary_setup:
    description: "Various setup before running tests"
    steps:
      - run:
          name: Auxiliary setup
          command: |
            gem install xcpretty --user-install
            HOMEBREW_NO_AUTO_UPDATE=1 brew install gnu-sed # for ci_test script
            mkdir logs test_results

  install_cocoapods:
    description: "Command to install and cache Cocoapods"
    steps:
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle --clean
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  install_pods:
    description: "Command to install and cache pods"
    steps:
      - restore_cache:
          name: Restore Pods cache
          keys:
            - v3-pods-{{ checksum "Podfile.lock" }}
      - run:
          name: Install Pods
          command: ./scripts/ci_pod_install
      - save_cache:
          name: Saving Pods cache
          key: v3-pods-{{ checksum "Podfile.lock" }}
          paths:
            - Pods
            - TreasureData.xcworkspace

  run_tests:
    description: ""
    parameters:
      version_name:
        type: "string"
      os:
        type: "string"
      simulator:
        type: "string"
        default: "iphone 11"
      no_output_timeout:
        type: integer
        default: 1800
    steps:
      - run:
          name: Test on iOS <<parameters.version_name>>
          no_output_timeout: <<parameters.no_output_timeout>>
          command: ./scripts/ci_test 'platform=iOS Simulator,name=<<parameters.simulator>>,OS=<<parameters.os>>' logs/xcbuild_ios_<<parameters.version_name>>.log test_results/ios_<<parameters.version_name>>.xml

  store_results:
    description: "Command to store artifacts and test results"
    steps:
      - store_artifacts:
          path: ./logs
          destination: logs
      - store_test_results:
          path: ./test_results

  ios9_install_and_workaround:
    description: "Command for iOS 9 workaround"
    steps:
      - run:
          name: iOS 9 Install and  Workaround
          command: |
            xcversion simulators --install='iOS 9.3' --no-progress
            sudo mkdir '/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 9.3.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift'

  ios8_install_and_workaround:
    description: "Command for iOS 8 workaround"
    steps:
      - run:
          name: iOS 8 Install and Workaround
          command: |
            xcversion simulators --install='iOS 8.4' --no-progress
            sudo mkdir '/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS 8.4.simruntime/Contents/Resources/RuntimeRoot/usr/lib/swift'

  run_tests_flow:
    description: "Single flow for running tests targetting specified iOS"
    parameters:
      version_name:
        type: "string"
      os:
        type: "string"
      simulator:
        type: "string"
        default: "iphone 11"
      no_output_timeout:
        type: integer
        default: 1800
    steps:
      - checkout
      - auxiliary_setup
      - install_cocoapods
      - install_pods
      - run_tests:
          version_name: <<parameters.version_name>>
          os: <<parameters.os>>
          simulator: <<parameters.simulator>>
      - store_results


jobs:
  test_ios14:
    macos:
      xcode: "12.0.0"
    steps:
      - run_tests_flow:
          version_name: "14"
          os: "14.0"
          simulator: "iPhone 11"

  test_ios13:
    macos:
      xcode: "11.6.0"
    steps:
      - run_tests_flow:
          version_name: "13"
          os: "13.6"
          simulator: "iPhone 11"

  test_ios12:
    macos:
      xcode: "10.2.1" 
    steps:
      - run_tests_flow:
          version_name: "12"
          os: "12.2"
          simulator: "iPhone 7"

  test_ios11:
    macos:
      xcode: "10.2.1"
    steps:
      - run_tests_flow:
          version_name: "11"
          os: "11.4"
          simulator: "iPhone 7"

  test_ios10:
    macos:
      xcode: "10.2.1"

    steps:
      - run_tests_flow:
          version_name: "10"
          os: "10.3.1"
          simulator: "iPhone 7"

  test_ios9:
    macos:
      xcode: "10.2.1"
    steps:
      - ios9_install_and_workaround
      - run_tests_flow:
          version_name: "9"
          os: "9.3"
          simulator: "iPhone 6s"

  test_ios8:
    macos:
      xcode: "10.2.1"
    steps:
      - ios8_install_and_workaround
      - run_tests_flow:
          version_name: "8"
          os: "8.4"
          simulator: "iPhone 6s"


workflows:
  version: 2
  test:
    jobs:
      - test_ios14
      - test_ios13
      - test_ios12
      - test_ios11
      - test_ios10
      - test_ios9
      - test_ios8
